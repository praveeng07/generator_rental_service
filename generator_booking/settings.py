"""
Django settings for generator_booking project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import allauth


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_^cykazbpwmnaul5n2-k1c06_q6&2^&o6!ssgb(!4w!o5cv-*x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server
    EMAIL_PORT = 587  # Port for SSL is 465 for SSL
    EMAIL_USE_TLS = True   # Use TLS for secure communication
    EMAIL_USE_SSL = False # Use SSL (not recommended for Gmail)
    DEFAULT_FROM_EMAIL = 'example@gmail.com' #Add your Email address
    SERVER_EMAIL = 'webmaster@localhost'  #dont change this one
    EMAIL_HOST_USER = 'example@gmail.com'  #Add your Email address  
    EMAIL_HOST_PASSWORD = 'lvnothpjybpqycnq'   #Add your Email-address password
# Above part from if DEBUG uses real e-mail of yours to reset the password and you need to set an app password in yours account(see how to set an app password of a account in google) after setting account password you need to paste in 'EMAIL_HOST_PASSWORD' field then your are good to go :)

# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # During development only

#you need to uncomment above two lines code and comment the above part only if you are willing to use dummy email not an actual one to reset the password

INSTALLED_APPS = [

    'bookings',

    'django.contrib.staticfiles',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'allauth',
    'allauth.account',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'generator_booking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'bookings/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'generator_booking.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STRIPE_PUBLIC_KEY = 'pk_test_51NTjWwSBvyGSZ5Asadfasdvasdvasdfgasdf2M6z0H4LADpdhtH81NPACHEjR1gbVcxubJjBimRASdVVmbJuJDGJ00OtY8dEqu'
STRIPE_SECRET_KEY = 'sk_test_51NTjWwSBvyGSZ5Adsvdfvsdfvsdfvsdf sdf sfgbssb5ZuylBWS6Sc7WJyl4pmfZKaQrrNj1IrMZhRw5evje9aq00KiHRlwog'

BASE_URL = "http://127.0.0.1:8000"